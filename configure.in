################################################################################
#
# configure.in for ThinkFinger, process with autoconf to create a configure
# script.
#
# Copyright (C) 2006, 2007 Novell, Inc.
# Author: Timo Hoenig <thoenig@suse.de>, <thoenig@nouse.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
################################################################################

# Initialize auto{conf,make}
AC_PREREQ(2.59)
AC_INIT(ThinkFinger, 0.2.1, http://thinkfinger.sourceforge.net/, thinkfinger)
AC_CONFIG_HEADERS([config.h])
AM_INIT_AUTOMAKE
AC_CONFIG_SRCDIR([libthinkfinger/libthinkfinger.c])

# Checks for required programs
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LIBTOOL

# Checks for header files.
AC_CHECK_HEADERS([unistd.h string.h stdio.h stdlib.h errno.h usb.h])

# AC_ARG_ENABLE PAM
AC_MSG_CHECKING([whether to build the pluggable authentication module (PAM)])
AC_ARG_ENABLE(pam, AC_HELP_STRING([--enable-pam],[build PAM module]),enable_pam=$enableval,enable_pam=yes)
AC_MSG_RESULT([$enable_pam])

if test "x$enable_pam" != "xno"; then
	AC_CHECK_HEADERS(security/pam_appl.h security/pam_modules.h,, AC_MSG_ERROR(PAM header files not found))
	AC_CHECK_LIB(pam, pam_start, [PAM_LIBS="-lpam"], AC_MSG_ERROR([libpam missing]))
	AC_CHECK_LIB(pthread, pthread_create, [PTHREAD_LIBS="-lpthread"], AC_MSG_ERROR([libpthread missing]))
	AC_DEFINE(BUILD_PAM,1,[Define to 1 if you want to build with PAM support.])
fi

# AC_ARG_ENABLE SECUREDIR
AC_ARG_ENABLE(securedir, AC_HELP_STRING([--with-securedir=dir],[Where to put PAM module @<:@default=$libdir/security@:>@]))

# AC_ARG_ENABLE_BIR_DIR
AC_ARG_ENABLE(birdir, AC_HELP_STRING([--with-birdir=dir],[Where to put the biometric identification records (bir files) @<:@default=$sysconfdir/pam_thinkfinger@:>@]))

# Check for libusb using pkg-config
PKG_CHECK_MODULES(USB, libusb >= 0.1.12, usb_found=yes, AC_MSG_ERROR([libusb missing]))

# Check for Doxygen
AC_CHECK_PROG(DOXYGEN, [doxygen], [doxygen], [])

# Find out prefix
PREFIX=
if test "x$prefix" = "xNONE" ; then
	PREFIX=$ac_default_prefix
else
	PREFIX=$prefix
fi
prefix=$PREFIX

# Find out exec_prefix
EXEC_PREFIX=
if test "x$exec_prefix" = xNONE ; then
	EXEC_PREFIX=$prefix
else
	EXEC_PREFIX=$exec_prefix
fi
exec_prefix=$EXEC_PREFIX

# AC_SUBST PREFIX, LIBDIR, BINDIR, SBINDIR SECUREDIR and BIRDIR
PREFIX_TMP="$prefix"
PREFIX=`eval echo $PREFIX_TMP`
AC_SUBST(PREFIX)

LIBDIR_TMP="$libdir"
LIBDIR=`eval echo $LIBDIR_TMP`
AC_SUBST(LIBDIR)

BINDIR_TMP="$bindir"
BINDIR=`eval echo $BINDIR_TMP`
AC_SUBST(BINDIR)

SBINDIR_TMP="$sbindir"
SBINDIR=`eval echo $SBINDIR_TMP`
AC_SUBST(SBINDIR)

if ! test -z "$with_securedir" ; then
	SECUREDIR_TMP="$with_securedir"
else
	SECUREDIR_TMP=$LIBDIR/security
fi
SECUREDIR=`eval echo $SECUREDIR_TMP`
AC_SUBST(SECUREDIR)

if ! test -z "$with_birdir" ; then
	BIRDIR_TMP="$with_birdir"
else
	BIRDIR_TMP=$sysconfdir/pam_thinkfinger
fi
BIRDIR=`eval echo $BIRDIR_TMP`
AC_SUBST(BIRDIR)

# AC_DEFINE PAM_BIRDIR
AC_DEFINE_UNQUOTED(PAM_BIRDIR,"${BIRDIR}",[Define to the directory where biometric identification records (bir files) are being stored.])

# AC_SUBST CFLAGS
CFLAGS="$CFLAGS -Wall"
CFLAGS="$CFLAGS -fno-common"
CFLAGS="$CFLAGS -fPIC"
CFLAGS="$CFLAGS -Wchar-subscripts"
CFLAGS="$CFLAGS -Wmissing-declarations"
CFLAGS="$CFLAGS -Wmissing-prototypes"
CFLAGS="$CFLAGS -Wnested-externs"
CFLAGS="$CFLAGS -Wpointer-arith"
CFLAGS="$CFLAGS -Wcast-align"
CFLAGS="$CFLAGS -Wsign-compare"
CFLAGS="$CFLAGS -Wdeclaration-after-statement"
AC_SUBST(CFLAGS)

# AC_SUBST USB_LIBS
AC_SUBST([USB_LIBS])

# AC_SUBST PAM_LIBS
AC_SUBST([PAM_LIBS])

# AC_SUBST_PTHREAD_LIBS
AC_SUBST([PTHREAD_LIBS])

# AM_CONDITIONAL
AM_CONDITIONAL(BUILD_PAM, test "x$enable_pam" = "xyes")

# AC_CONFIG_FILES
AC_CONFIG_FILES([Makefile
		docs/Makefile
		docs/autodocs/Makefile
		libthinkfinger/Makefile
		libthinkfinger/libthinkfinger.pc
		pam/Makefile
		tf-init/Makefile
		tf-tool/Makefile
])

# Configuration
echo "
 $PACKAGE_NAME $VERSION
 =================

 + prefix:		${PREFIX}
 + libdir:		${LIBDIR}
 + bindir:		${BINDIR}
 + sbindir:		${SBINDIR}

 + cflags:		${CFLAGS}
 + libusb:		${USB_LIBS}
"

if test  "x$enable_pam" = "xyes" ; then
echo " Build PAM module:	$enable_pam

 + libpam:              ${PAM_LIBS}
 + libpthread:		${PTHREAD_LIBS}
 + securedir:		${SECUREDIR}
 + birdir:		${BIRDIR}
"
fi

# AC_OUTPUT
AC_OUTPUT
